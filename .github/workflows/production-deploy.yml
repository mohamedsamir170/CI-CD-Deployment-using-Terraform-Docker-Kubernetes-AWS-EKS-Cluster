name: Blue-Green Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Select blue or green for deployment'
        required: true
        default: 'blue'
        type: choice
        options:
          - blue
          - green

env:
  KUBECONFIG: ${{ secrets.KUBECONFIG }}
  HELM_RELEASE_NAME: nodejs-app
  HELM_CHART_PATH: ./nodejs-helm

jobs:
  # build-and-test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '22'

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Run tests
  #       run: npm run test

  #     - name: Build the application
  #       run: npm run build

  # build-and-push:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Log in to Docker Hub
  #       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  #     - name: Build Docker image
  #       run: |
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs:latest .

  #     - name: Push Docker image
  #       run: |
  #         docker push ${{ secrets.DOCKER_USERNAME }}/nodejs:latest

  deploy:
    runs-on: ubuntu-latest
    # needs: build-and-push
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        run: |
          if [ "${{ github.event.inputs.deploy_target }}" == "blue" ]; then
            echo "Deploying to blue..."
            kubectl apply -f ./deployment-blue.yaml
          elif [ "${{ github.event.inputs.deploy_target }}" == "green" ]; then
            echo "Deploying to green..."
            kubectl apply -f ./deployment-green.yaml
          else
            echo "Invalid choice, please select either 'blue' or 'green'."
            exit 1
          fi

      # Set up AWS credentials and configure kubectl
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.PRODUCTION_CLUSTER }}

