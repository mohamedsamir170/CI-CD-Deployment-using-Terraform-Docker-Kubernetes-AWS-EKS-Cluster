name: CI/CD Pipeline for Node.js App with Helm

on:
  push:
    branches:
      - main # Deploy only on push to main branch
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22' # Specify the Node.js version

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Run tests
        run: npm run test

      # Build the application
      - name: Build application
        run: npm run build

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs:${{ github.sha }} .

      # Push the Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/nodejs:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

        # Set up AWS credentials and configure kubectl
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks --region us-east-1 update-kubeconfig --name production-cluster

      # Set up kubectl
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl version --client

      # Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Deploy using Helm
        run: |
          helm upgrade --install nodejs-app ./nodejs-helm \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/nodejs \
            --set image.tag=${{ github.sha }}

      # Wait for deployment to complete and check status
      - name: Wait for deployment and check status
        run: |
          kubectl rollout status deployment/nodejs-app --timeout=300s
          if [ $? -ne 0 ]; then
            echo "Deployment failed, rolling back..."
            kubectl rollout undo deployment/nodejs-app
            exit 1
          fi

      # Rename old green to blue and set new green as active
      - name: Rename and switch to green deployment
        run: |
          kubectl rename deployment app-green app-blue
          helm upgrade nodejs-app ./nodejs-helm --set activeApp=nodejs-green

      # Delete the old blue deployment (cleanup)
      - name: Delete the old blue deployment
        run: |
          kubectl delete deployment app-blue
