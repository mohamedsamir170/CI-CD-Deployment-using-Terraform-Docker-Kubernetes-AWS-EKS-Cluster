name: CI/CD Pipeline for Node.js Application on Kubernetes

on:
  push:
    branches:
      - development

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Build the application
        run: npm run build

  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/nodejs:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [ build-and-test, build-and-push ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up AWS credentials and configure kubectl
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.STAGING_CLUSTER }}

      - name: Create development namespace if it doesn't exist
        run: |

          if [[ -z $(kubectl get namespace | grep -w development) ]]; then
              kubectl create namespace development
          fi

      # Deploy to the development namespace
      - name: Deploy to Kubernetes
        run: |

          # Apply the Service and Deployment manifests for the correct namespace
          kubectl apply -f ./deplyment.yaml -n development
